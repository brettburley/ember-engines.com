{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/helpers/ember-cli-clipboard.js","dummy/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dummy/tests/helpers/ember-cli-clipboard\", [\"exports\", \"ember-cli-clipboard/test-support\"], function (_exports, _testSupport) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.triggerSuccess = triggerSuccess;\n  _exports.triggerError = triggerError;\n  _exports.default = _default;\n\n  const getOwnerFromContext = c => c.container || c.owner;\n  /* === Legacy Integration Test Helpers === */\n\n  /**\n   * Fires `success` action for an instance of a copy-button component\n   * @function triggerSuccess\n   * @param {Object} context - integration test’s this context\n   * @param {String} selector - css selector of the copy-button instance\n   * @returns {Void}\n   */\n\n\n  function triggerSuccess(context, selector) {\n    const owner = getOwnerFromContext(context);\n    (0, _testSupport._fireComponentAction)(owner, selector, 'success');\n  }\n  /**\n   * Fires `error` action for an instance of a copy-button component\n   * @function triggerError\n   * @param {Object} context - integration test’s this context\n   * @param {String} selector - css selector of the copy-button instance\n   * @returns {Void}\n   */\n\n\n  function triggerError(context, selector) {\n    const owner = getOwnerFromContext(context);\n    (0, _testSupport._fireComponentAction)(owner, selector, 'error');\n  }\n  /* === Register Legacy Acceptance Test Helpers === */\n\n\n  function _default() {\n    Ember.Test.registerAsyncHelper('triggerCopySuccess', function (app, selector) {\n      const owner = app.__container__;\n      (0, _testSupport._fireComponentAction)(owner, selector, 'success');\n    });\n    Ember.Test.registerAsyncHelper('triggerCopyError', function (app, selector) {\n      const owner = app.__container__;\n      (0, _testSupport._fireComponentAction)(owner, selector, 'error');\n    });\n  }\n});","define(\"dummy/tests/test-helper\", [\"dummy/app\", \"dummy/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}